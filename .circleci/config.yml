version: 2

orbs:
  maven: circleci/maven@1.2.0
  allure: ayte/allure@2.14.0
  
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: sudo apt-get update
      - run: sudo apt-get install maven
      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      
      - run: mvn test -Dcucumber.options="src/main/resources/feature/Mobiquity.feature"

# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
version: '2.1'
description: Orb providing support for [Allure Framework](https://github.com/allure-framework/allure2)
commands:
  install:
    description: Installs Allure Framework and registers it as /usr/local/bin/allure
    parameters:
      version:
        description: Allure version to use
        type: string
        default: 2.14.0
    steps:
      - run:
          name: Allure archive download
          command: curl -L https://github.com/allure-framework/allure2/releases/download/<< parameters.version >>/allure-commandline-<< parameters.version >>.zip -o /tmp/allure.zip
      - run:
          name: Archive extraction
          command: unzip /tmp/allure.zip
      - run:
          name: Allure installation
          command: sudo mv allure-<< parameters.version >> /usr/local/share/allure
      - run:
          name: Allure binary symlinking
          command: sudo ln -s /usr/local/share/allure/bin/allure /usr/local/bin/allure
  report:
    description: Generates report using Allure Framework
    parameters:
      configuration-path:
        description: Path to Allure configuration, uses default one if omitted
        type: string
        default: /usr/local/share/allure/config/allure.yml
      target-path:
        description: Path for report directory
        type: string
        default: allure-report
      results-path:
        description: Path to directory with test results
        type: string
        default: allure-results
      artifact-path:
        description: Path that will be used when storing result as artifact
        type: string
        default: Report/Allure
    steps:
      - run:
          name: Allure report generation (<< parameters.results-path >> -> << parameters.target-path >>)
          command: |
            allure generate \
              --config << parameters.configuration-path >> \
              --report-dir << parameters.target-path >> \
              << parameters.results-path >>
      - store_artifacts:
          path: << parameters.target-path >>
          destination: << parameters.artifact-path >>
